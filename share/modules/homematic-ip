#!/bin/bash
#
# Homematic IP
#

description="Homematic IP Unterstützung"
module_version="0.3"

set +e

_module_install()
{
    # hilfsvariable
    deb_kernel=0
    # Aktuelle Kernel Version
    kernel_version=$(uname -r | sed -e 's/-.*//i')

    if [ ! -e ${LXC_ROOT_MODULES}/hm-mod-rpi-pcb ] && [ $IS_FORCE -ne 1 ]
    then
        die "ERROR: hm-mod-rpi-pcb module must be installed first"
    fi

    [ "x$(id -un)" == "xroot" ] || die "Sorry, this script must be run as root. Try sudo ...."

    # falls mmd_bidcos vorhanden ist, wurde homematic-ip bereits installiert
    if [ ! -L $LXC_ROOT_FS/dev/mmd_bidcos ] && [ $IS_FORCE -ne 1 ]
    then
        die "Homematic-IP module is present, or something is wrong"
    fi

    #################################################
    #   Vorgehen im Zuge des Durchlaufs (Vorbereitsungsarbeiten)
    #################################################

    # load actual config
    modprobe configs
    # check if kernel already compiled without pl011
    if [ $(zcat /proc/config.gz | grep CONFIG_SERIAL_AMBA_PL011=y | wc -l) -eq 0 ]
    then # kernel Anpassung nicht notwendig, einfach neues Modul laden
        shared=1
        reboot=0
    else # wir haben noch die alte Version am laufen, müssen erst kernel aktualisieren
        shared=0
        reboot=1
    fi

    # Bestimmen ob das RAW Device bereits installiert wurde
    if [ ! -c /dev/bcm2835-raw-uart ]
    then
        dev_int="ttyAMA0"
    else
        dev_int="bcm2835-raw-uart"
    fi

    # Container muss laufen
    if [ $(lxc-info -n ${LXCNAME}|grep STOPPED|wc -l) -eq 1 ]
    then
        die "${LXCNAME} container is stopped, please start it first"
    fi

    # Kernel Version cleanup/check
    if [ $IS_VERBOSE -eq 1 ]
    then
        info "DEBUG: Loaded Kernel:   ${kernel_version} "
    fi

    # Prüfung der Kernel Version von dem DEB Paket (apt-get Weg)
    if [ -f /usr/share/doc/raspberrypi-bootloader/changelog.Debian.gz ]
    then
        deb_firmware_hash=$(zcat  /usr/share/doc/raspberrypi-bootloader/changelog.Debian.gz | grep -m1 -o '[0-9a-fA-F]\{40\}')
        deb_hash=$(wget $QUIET -O-  -T 3 -t 1 https://raw.githubusercontent.com/raspberrypi/firmware/${deb_firmware_hash}/extra/git_hash)
        deb_version=$(wget $QUIET -O-  -T 3 -t 1 https://raw.githubusercontent.com/raspberrypi/firmware/${deb_firmware_hash}/extra/uname_string7 | cut -d" " -f3 |  sed -e 's/-.*//i' )

        if [ $IS_VERBOSE -eq 1 ]
        then
            info "DEBUG: DEB Kernel Hash: ${deb_version} (${deb_hash}); Firmware Hash: ${deb_firmware_hash}"
        fi

        deb_kernel=1
    fi

    # Prüfung der Kernel Version rpi-update weg
    if [ -f /boot/.firmware_revision ]
    then
        rpi_firmware_hash=$(cat /boot/.firmware_revision)
        rpi_hash=$(wget $QUIET -O-  -T 3 -t 1 https://raw.githubusercontent.com/Hexxeh/rpi-firmware/${rpi_firmware_hash}/git_hash)
        rpi_version=$(wget $QUIET -O-  -T 3 -t 1 https://raw.githubusercontent.com/Hexxeh/rpi-firmware/${rpi_firmware_hash}/uname_string7 | cut -d" " -f3 |  sed -e 's/-.*//i' )

        if [ $IS_VERBOSE -eq 1 ]
        then
            info "DEBUG: RPi Kernel Hash: ${rpi_version} (${rpi_hash}); Firmware Hash: ${rpi_firmware_hash}"
        fi

        # kernel is newer, deb kernel installed, rpi-update hash old -> new kernel installed via dpkg
        if [ $(ver ${kernel_version}) -gt $(ver ${rpi_version}) ] && [ $deb_kernel -eq 1 ]
        then
            info "Actual kernel version is different/newer then last installed rpi-update version, cleaning up"
            rm -rf  /boot/.firmware_revision

        # Kernel is older then rpi-version
        elif [ $(ver ${kernel_version}) -lt $(ver ${rpi_version}) ]
        then
            die "Something is wrong, last rpi-update version is ${rpi_version}, loaded kernel version is ${kernel_version}. If you recently updated your kernel with rpi-update, please restart first. Else please remove '/boot/.firmware_revision' file and start again"

        # deb is not installed, kernel is newer then rpi-update version
        elif [ $(ver ${kernel_version}) -gt $(ver ${rpi_version}) ]  && [ $deb_kernel -eq 0 ] && [ $(ver ${kernel_version}) -gt $(ver ${deb_version}) ]
        then
            die "Something is wrong, loaded kernel ${kernel_version} is newer then last rpi-update (${rpi_version}) or dpkg (${deb_version}) installed versions, own kernel buils are not supported"
        fi
    fi

    # kernel is newer then rpi-update AND deb version
    if  [ $(ver ${kernel_version}) -gt $(ver ${rpi_version}) ] && [ $(ver ${kernel_version}) -gt $(ver ${deb_version}) ]
    then
        die "Something is wrong, loaded kernel ${kernel_version} is newer then last rpi-update (${rpi_version}) or dpkg (${deb_version}) installed versions, own kernel buils are not supported"
    fi

    # Stoppen des Multimac-Daemons ist notwendig, damit man das Modul über UART ansprechen kann, sonst funktioniert die Versionsbestimmung nicht
    progress "Stopping rfd and multimac services, to detect module firmware"
    lxc-attach -n ${LXCNAME}  -- /etc/init.d/S60multimacd stop
    lxc-attach -n ${LXCNAME}  -- /etc/init.d/S61rfd stop

    # Firmware check
    firmware_version=`lxc-attach -n ${LXCNAME} -- /bin/eq3configcmd update-coprocessor -p /dev/${dev_int} -c -v 3>&1 1>&2 2>&3  | grep -Po 'Version: \K[^"]*'`

    if [ $IS_VERBOSE -eq 1 ]
    then
        info "DEBUG: Firmware Version: ${firmware_version}; PL011 is disabled: ${shared}: Module Interface: ${dev_int}"
    fi

    if [ $IS_VERBOSE -eq 1 ]
    then
        APT_OUTPUT=""
    else
        APT_OUTPUT="-qq"
    fi

    # Alle Pakete auf den aktuellen Stand brin gen
    progress "Updating sources"
    apt-get ${APT_OUTPUT} update

    # Abhängigkeiten installieren
    progress "Installing dependencies"
    apt-get ${APT_OUTPUT} -y install subversion bc gcc-4.9 make libncurses5-dev bc 

    progress "Set right gcc version"
    ln -sf /usr/bin/gcc-4.9 /usr/bin/gcc

    #################################################
    #   Neues Kernel bauen (falls UART treiber einkompiliert wurde)
    #################################################

    if [ $shared -eq 0 ]
    then
        info "Build new kernel without PL011 UART driver"

        progress "Found kernel $(uname -r) downloading sources..."
        # aktuelle Kernel Headers runterladen
        chmod +x /opt/YAHM/share/tools/rpi-source/rpi-source
        /opt/YAHM/share/tools/rpi-source/rpi-source --nomake  -d /usr/src/

        progress "Preparing raspberry kernel configuration"
        # enter src folder
        cd /usr/src/linux/
        if [ $? -eq 1 ]
        then
            die "Something is wrong, exit" # SRC Ordner fehlt
        fi
        # prepare kernel config
        KERNEL=kernel7
        # create default config
        make bcm2709_defconfig
        # remove pl011 console
        sed -i .config -e "s/CONFIG_SERIAL_AMBA_PL011=y/CONFIG_SERIAL_AMBA_PL011=n/"
        sed -i .config -e "s/CONFIG_SERIAL_AMBA_PL011_CONSOLE=y/CONFIG_SERIAL_AMBA_PL011_CONSOLE=n/"
        # write config

        progress "Building kernel (can take some time... 1 hour on RPi 3)"
        make -j4 zImage modules dtbs
        if [ $? -eq 1 ]
        then
            die "Problem while compiling kernel, exit" # Make hat fehler geworfen
        fi
        progress "Installing new kernel"
        # Module/Treiber installieren
        make modules_install
        # Kernel installieren
        cp arch/arm/boot/dts/*.dtb /boot/
        cp arch/arm/boot/dts/overlays/*.dtb* /boot/overlays/
        cp arch/arm/boot/dts/overlays/README /boot/overlays/
        cp arch/arm/boot/zImage /boot/$KERNEL.img
    else
        info "Kernel module amba_pl011 already shared! Skipping"
    fi

    #################################################
    #   eq3 Kernel Module bauen
    #################################################

    build_status=$(modprobe bcm2835_raw_uart &> /dev/null)
    if [ $? -ne 0 ]
    then
        info "Building Homematic-IP modules"
        if [ -d /lib/modules/$(uname -r)/kernel/drivers/char/broadcom ]
        then
            mkdir -p /lib/modules/$(uname -r)/kernel/drivers/char/broadcom
        fi

        progress "Building eq3_loop kernel module"
        # Loop bauen
        cd "${YAHM_DIR}/share/tools/kernel-modules/eq3_char_loop"
        make
        if [ $? -ne 0 ]
        then
            die "Problem while building eq3_char_loop module, exit"
        fi
        cp eq3_char_loop.ko /lib/modules/$(uname -r)/kernel/drivers/char/

        progress "Building new UART kernel module"
        # fix falls bmc2709 Daten nicht vorhanden sind
        if [ ! -d /usr/src/linux/arch/arm/mach-bcm2709 ]
        then
            cp -rf "${YAHM_DIR}/share/tools/mach-bcm2709" /usr/src/linux/arch/arm
            #info "Downloading needed files form repository"
            #cd /usr/src/linux/arch/arm
            #svn export https://github.com/raspberrypi/linux/branches/rpi-4.7.y/arch/arm/mach-bcm2709
        fi
        # UART bauen
        cd "${YAHM_DIR}/share/tools/kernel-modules/bcm2835_raw_uart"
        make
        if [ $? -ne 0 ]
        then
            die "Problem while building bcm2835_raw_uart module, exit"
        fi
        cp bcm2835_raw_uart.ko /lib/modules/$(uname -r)/kernel/drivers/char/broadcom
    else
        info "Homematic-ip kernel modules are already present! Skipping"
        if [ $IS_VERBOSE -eq 1 ]
        then
            info "INFO: eq3 modules"
            modinfo bcm2835_raw_uart eq3_char_loop
        fi
    fi

    #################################################
    #   Module Nachbehandlung im Host und LXC Container
    #################################################

    info "Changing Host and LXC configuration and installing modules"
    # ttyS0 entfernen, falls major char ID unter 200
    if [ $((16#$(stat -c %t ${LXC_ROOT_FS}/dev/ttyS0))) -lt 200 ]
    then
        progress "Removing old ttyS0 device in YAHM"
        lxc-attach -n ${LXCNAME} -- rm -rf /dev/ttyS0
    fi

    # mmd_bidcos entfernen, falls es ein Symlink ist
    if [ -L $LXC_ROOT_FS/dev/mmd_bidcos ]
    then
        progress "Removing mmd_bidcos symlink in YAHM"
        lxc-attach -n ${LXCNAME} -- rm -rf /dev/mmd_bidcos
    fi

    # Kernel Module laden
    if [ $shared -eq 1 ]
    then
        progress "Loading new kernel modules"
        # Module laden
        depmod -a
        modprobe eq3_char_loop
        modprobe bcm2835_raw_uart

        sleep 1

        if [ ! -c /dev/bcm2835-raw-uart ]
        then
            die "Something get wrong, can not find bcm2835-raw-uart device"
        fi

        progress "Enable new modules in YAHM"
        # Geräte an Container übergeben
        if [ ! -c $LXC_ROOT_FS/dev/bcm2835-raw-uart ]
        then
            lxc-device -n ${LXCNAME} add /dev/bcm2835-raw-uart
        fi
        if [ ! -c $LXC_ROOT_FS/dev/eq3loop ]
        then
            lxc-device -n ${LXCNAME} add /dev/eq3loop
        fi
    else
        progress "Generate modules.dep and map files"
        depmod -a
        # depmod -b "${ROOT_PATH}" -a "4.9.22+"

        cat > /var/lib/yahm/homematic-ip <<EOF
#!/bin/sh -e
#self destroy
#rm -rf /var/lib/yahm/homematic-ip
# cleanup rc.local
sed -i /etc/rc.local -e "s/\/var\/lib\/yahm\/homematic-ip/#homematic-ip: done/"

sleep 20

if [ -c /dev/bcm2835-raw-uart ]
then
    lxc-device -n ${LXCNAME} add /dev/bcm2835-raw-uart
fi
if [ -c /dev/eq3loop ]
then
    lxc-device -n ${LXCNAME} add /dev/eq3loop
    # get device ID
    loopdev=\$(ls -al /dev/eq3loop | grep -o '24[0-9]')
    mknod -m 666 ${LXC_ROOT_FS}/dev/ttyS0 c \$loopdev 1
    mknod -m 666 ${LXC_ROOT_FS}/dev/mmd_bidcos c \$loopdev 2
fi
/opt/YAHM/bin/yahm-ctl restart
EOF

        chmod +x /var/lib/yahm/homematic-ip
        sed -i /etc/rc.local -e "s/^exit 0/\/var\/lib\/yahm\/homematic-ip\\nexit 0/"
    fi

    # Treiber beim Booten laden
    if [ $(cat /etc/modules | grep "^eq3_char_loop" | wc -l) -eq 0 ]
    then
        echo eq3_char_loop >> /etc/modules
    fi
    if [ $(cat /etc/modules | grep "^bcm2835_raw_uart" | wc -l) -eq 0 ]
    then
        echo bcm2835_raw_uart >> /etc/modules
    fi

    #################################################
    #   Anpassung YAHM Konfiguration
    #################################################

    info "Changing YAHM configuration"

    progress "Changing multimacd files"
    # Init Skript
    lxc-attach -n ${LXCNAME} -- sed -i /etc/init.d/S60multimacd -e "s/mxs_auart_raw.0/bcm2835-raw-uart/g"
    # Multimac Config
    lxc-attach -n ${LXCNAME} -- sed -i /etc/config/multimacd.conf -e "s/mxs_auart_raw.0/bcm2835-raw-uart/g"

    if [ $(cat $LXC_ROOT_FS/usr/local/etc/config/InterfacesList.xml | grep "HmIP-RF" | wc -l ) -eq 0 ]
    then
        progress "Enable Homamatic-IP in InterfacesList.xml"
        # HMIP-RF aktivieren
        cat > /tmp/xml <<EOF
        <ipc>
            <name>HmIP-RF</name>
            <url>xmlrpc://127.0.0.1:2010</url>
            <info>HmIP-RF</info>
        </ipc>
</interfaces>
EOF
        sed -i $LXC_ROOT_FS/usr/local/etc/config/InterfacesList.xml -e "s/<\/interfaces>//"
        sed -i $LXC_ROOT_FS/etc/config_templates/InterfacesList.xml -e "s/<\/interfaces>//"
        cat /tmp/xml >> $LXC_ROOT_FS/usr/local/etc/config/InterfacesList.xml
        cat /tmp/xml >> $LXC_ROOT_FS/etc/config_templates/InterfacesList.xml
    fi

    if [ -f ${LXC_ROOT_FS}/etc/init.d/_S62HMServer ]
    then
        progress "Restoring HMServer"
        mv ${LXC_ROOT_FS}/etc/init.d/_S62HMServer ${LXC_ROOT_FS}/etc/init.d/S62HMServer
	rm -rf ${LXC_ROOT_FS}/etc/init.d/S61HMServer
    fi

    if [ ! -f ${LXC_ROOT_FS}/etc/config/hmip_networkkey.conf ]
    then
        NEW_KEY=$(cat /dev/urandom | tr -dc 'A-F0-9' | fold -w 32 | head -n 1)
        echo "Network.Key=${NEW_KEY}" > ${LXC_ROOT_FS}/etc/config/hmip_networkkey.conf
    fi

    #################################################
    #   Aktualisierung der Firmware für Homematic-IP Unterstützung
    #################################################

    info "Updating firmware for DualCoPro configuration"

    if [ $(ver ${firmware_version}) -lt $(ver 2.8.4) ]
    then
        progress "Downloading actual firmware from repository"
        cd $LXC_ROOT_FS/firmware
        svn export https://github.com/eq-3/occu/trunk/firmware/HM-MOD-UART
        # set right firmware version
        cd HM-MOD-UART
        # comment out dual firmware
        sed -i '/dualcopro/s/^#//g' fwmap
        # comment single firmware
        sed -i '/coprocessor/s/^/#/g' fwmap

        progress "Flashing firmware"
        lxc-attach -n ${LXCNAME} --  eq3configcmd update-coprocessor -p /dev/${dev_int} -t HM-MOD-UART -u -c -d /firmware/HM-MOD-UART
    else
        info "Firmware already support Homematic IP"
    fi

    #info "Remove ttyAMA0 device"
    #lxc-attach -n ${LXCNAME} -- rm -rf /dev/ttyAMA0

    #################################################
    #   Starten der Dienste und Übergabe der Geräte an LXC
    #################################################

    if [ $shared -eq 1 ]
    then
        info "Restarting multimacd to get loop devices"
        lxc-attach -n ${LXCNAME} -- /etc/init.d/S60multimacd restart

        sleep 2

        if [ -c /dev/mmd_bidcos ]
        then
            progress "Creating new ttyS0 and mmd_bidcos devices in YAHM"
            lxc-device -n ${LXCNAME} add /dev/mmd_bidcos
            lxc-device -n ${LXCNAME} add /dev/ttyS0

            progress "Restarting rfd and hmipserver"
            lxc-attach -n ${LXCNAME} -- /etc/init.d/S61rfd restart
            lxc-attach -n ${LXCNAME} -- /etc/init.d/S62HMServer restart
        fi
    else
        sed -i $LXC_ROOT/config -e "s/lxc.cgroup.devices.allow = c 243:0 rwm/lxc.cgroup.devices.allow = c 243:* rwm/"
    #    sed -i $LXC_ROOT/config -e "s/# hmip-rf/# hmip-rf\\nlxc.cgroup.devices.allow = c 242:0 rwm/"
    fi

    info "Blocking new kernel updates, please do not use rpi-update anymore"
    echo raspberrypi-kernel hold | dpkg --set-selections

    # Reboot
    if [ $reboot -gt 0 ]
    then
        info "======================================"
        info "Rebooting in 60 seconds to apply settings (to chancel reboot type 'shutdown -c')..."
#        progress "Please restart the installation with 'yahm-module -m homematic-ip -f enable' after reboot"
        info "======================================"
        shutdown -r +1 "Rebooting to replace kernel"
    else
        info "Homematic IP module installed successfully"
    fi
}

_module_remove()
{
    check_install_deb "xmlstarlet"

    progress "Removing HmIP-RF Interface"
    if [ ! -f "${LXC_ROOT_FS}/usr/local/etc/config/InterfacesList.xml" ]
    then
        die "InterfacesList.xml can not be found, please start ${LXCNAME} first"
    fi

    cd ${LXC_ROOT_FS}/usr/local/etc/config/
    xmlstarlet ed -d "/interfaces/ipc[name='HmIP-RF']" InterfacesList.xml > InterfacesList.xml.new
    mv InterfacesList.xml InterfacesList.xml.bak
    mv InterfacesList.xml.new InterfacesList.xml

    cd ${LXC_ROOT_FS}/etc/config_templates/
    xmlstarlet ed -d "/interfaces/ipc[name='HmIP-RF']" InterfacesList.xml > InterfacesList.xml.new
    mv InterfacesList.xml InterfacesList.xml.bak
    mv InterfacesList.xml.new InterfacesList.xml

    installed_version=`get_yahm_version ${LXCNAME}`

    if [ $(ver ${installed_version}) -ge $(ver 2.15.6) ]
    then
   	progress "Downloading jre-7u10"
        curl -sS -o /tmp/ejre-7u10.tgz $VERBOSE -O -L -b oraclelicense=accept-securebackup-cookie http://download.oracle.com/otn-pub/java/ejre/7u10-b18/ejre-7u10-fcs-b18-linux-arm-vfp-client_headless-28_nov_2012.tar.gz
	progress "Extracting jre-7u10"
	tar $VERBOSE -xzf /tmp/ejre-7u10.tgz -C ${LXC_ROOT_FS}/opt/
	progress "Downloading old HMServer.jar"
        curl -sS -o ${LXC_ROOT_FS}/opt/HMServer/HMServer.jar -O -L https://github.com/eq-3/occu/raw/ff030ca119f2597d16a90b01b61dddb2147b6841/HMserver/opt/HMServer/HMServer.jar
        #progress "Restoring old HMServer.jar file"
        #wget $QUIET -O ${LXC_ROOT_FS}/opt/HMServer/HMServer.jar https://raw.githubusercontent.com/eq-3/occu/master/HMserver/opt/HMServer/HMServer.jar
        #Backup old startup file
        mv ${LXC_ROOT_FS}/etc/init.d/S62HMServer ${LXC_ROOT_FS}/etc/init.d/_S62HMServer
        #Create new startup file
        cat > "${LXC_ROOT_FS}/etc/init.d/S61HMServer" <<EOF
#!/bin/sh
#
# Starts HMServer.
#

LOGLEVEL_HMServer=5
CFG_TEMPLATE_DIR=/etc/config_templates

init() {
    export TZ=\`cat /etc/config/TZ | cut -d'-' -f1 | cut -d'+' -f1\`
    export JAVA_HOME=/opt/ejre1.7.0_10/
    export PATH=\$PATH:\$JAVA_HOME/bin
    if [ ! -e /etc/config/log4j.xml ] ; then
        cp \$CFG_TEMPLATE_DIR/log4j.xml /etc/config
    fi
}

start() {
    echo -n "Starting HMServer: "
    init
    start-stop-daemon -S -q -p /var/run/HMServer.pid --exec java -- -Xmx32m -Dlog4j.configuration=file:///etc/config/log4j.xml -Dfile.encoding=ISO-8859-1 -jar /opt/HMServer/HMServer.jar &
    eq3configcmd wait-for-file -f /var/status/HMServerStarted -p 5 -t 135
    echo	 "OK"
}
stop() {
    echo -n "Stopping HMServer: "
    start-stop-daemon -K -q -p /var/run/HMServer.pid
    echo "OK"
}
restart() {
    stop
    start
}

case "\$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload)
    restart
    ;;
  *)
    echo "Usage: \$0 {start|stop|restart}"
    exit 1
esac

exit \$?
EOF
        chmod +x ${LXC_ROOT_FS}/etc/init.d/S61HMServer
    fi

    # Bestimmen ob das RAW Device bereits installiert wurde
    if [ ! -c /dev/bcm2835-raw-uart ]
    then
        dev_int="ttyAMA0"
    else
        dev_int="bcm2835-raw-uart"
    fi

    progress "Stopping rfd and multimac services, to detect module firmware"
    lxc-attach -n ${LXCNAME}  -- /etc/init.d/S60multimacd stop
    lxc-attach -n ${LXCNAME}  -- /etc/init.d/S61rfd stop

    # Firmware check
    firmware_version=`lxc-attach -n ${LXCNAME} -- /bin/eq3configcmd update-coprocessor -p /dev/${dev_int} -c -v 3>&1 1>&2 2>&3  | grep -Po 'Version: \K[^"]*'`

    info "Downgrade firmware if needed"

    if [ $(ver ${firmware_version}) -gt $(ver 2.0.0) ]
    then
        progress "Downloading actual firmware from repository"
        cd $LXC_ROOT_FS/firmware
        svn export https://github.com/eq-3/occu/trunk/firmware/HM-MOD-UART
        # set right firmware version
        cd HM-MOD-UART

        progress "Flashing firmware"
        lxc-attach -n ${LXCNAME} --  eq3configcmd update-coprocessor -p /dev/${dev_int} -t HM-MOD-UART -u -f -c -d /firmware/HM-MOD-UART
    else
        info "Firmware already downgraded"
    fi

    if [ -c ${LXC_ROOT_FS}/dev/mmd_bidcos ]
    then
        rm -rf ${LXC_ROOT_FS}/dev/mmd_bidcos
        cd ${LXC_ROOT_FS}/dev
        ln -sf ttyAMA0 mmd_bidcos
    fi

    # Treiber beim Booten nicht laden
    if [ $(cat /etc/modules | grep "^eq3_char_loop" | wc -l) -eq 1 ]
    then
        echo eq3_char_loop >> /etc/modules
        sed -i '/eq3_char_loop/s/^/#/g' /etc/modules
    fi
    if [ $(cat /etc/modules | grep "^bcm2835_raw_uart" | wc -l) -eq 1 ]
    then
        echo bcm2835_raw_uart >> /etc/modules
        sed -i '/bcm2835_raw_uart/s/^/#/g' /etc/modules
    fi

    # Kernel updates zulassen
    echo raspberrypi-kernel install | dpkg --set-selections

    lxc-attach -n ${LXCNAME} -- /etc/init.d/S61rfd restart
    lxc-attach -n ${LXCNAME} -- /etc/init.d/S61HMServer start

    info "Homematic-IP interface was removed, please restart CCU2-LXC Container"
}
