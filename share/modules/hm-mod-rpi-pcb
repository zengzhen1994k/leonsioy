#!/bin/bash
#
# Leon265130 http://homematic-forum.de
#
# HM-MOD-RPI-PBC Modul for Raspberry Pi2 / Raspberry Pi3
#

description="GPIO Funkmodul fÃ¼r Raspberry Pi2/3"
# Default Parameter
file_hm_mod_rpi_pcb='/etc/init.d/hm-mod-rpi-pcb'
file_cmdline_txt='/boot/cmdline.txt'
reboot=0 # Neustart ausfuehren

_module_install()
{
    file_rfd_conf="${LXC_ROOT_FS}/usr/local/etc/config/rfd.conf"

    if [ -e ${LXC_ROOT_MODULES}/hm-fake-lan-gw ] && [ $IS_FORCE -ne 1 ]
    then
        die "ERROR: hm-mod-rpi-pcb module is installed, please remove it first"
    fi

    if [ "$BOARD_TYPE" != "Raspberry Pi" ] && [ $IS_FORCE -ne 1 ]
    then
        info "See Wiki for manual installation"
        die "ERROR: This module is for Raspberry Pi only, use -f flag to overwrite this check"
    fi

    info "Found hardware: $BOARD_TYPE $BOARD_VERSION"

    # Raspberry 2 oder 3 ?
    if [ "$BOARD_TYPE" = "Raspberry Pi" ] && [ "$BOARD_VERSION" = "3" ]
    then
        progress "Trying to disable bluetooth on Raspberry Pi 3to use HM-MOD-RPI-PCB"
        if [ ! -f /boot/overlays/pi3-disable-bt-overlay.dtb ] && [ $IS_FORCE -ne 1 ]
        then
            progress "Overlay file not found, trying to download pi3-disable-bt-overlay.dtb."
            wget $QUIET -O /boot/overlays/pi3-disable-bt-overlay.dtb https://raw.githubusercontent.com/raspberrypi/linux/rpi-4.4.y/arch/arm/boot/dts/overlays/pi3-disable-bt-overlay.dts
            if [ $? -ne 0 ] 
            then
                die 'ERROR: Problem downloading pi3-disable-bt-overlay.dtb!'
            fi
        fi
    
        if [ ! -f /boot/config.txt ] && [ $IS_FORCE -ne 1 ]
        then
            die "ERROR: File /boot/config.txt does not exist!"
        fi

        if [ $(cat /boot/config.txt | grep pi3-disable-bt-overlay | wc -l ) -eq 0 ]
        then
            echo -e "\n# Allow the normal UART pins to work\ndtoverlay=pi3-disable-bt-overlay" >> /boot/config.txt
            info "Modification /boot/config.txt done."      
            reboot=$((reboot+1))
        fi
    fi

    # Disable serial    
    progress "Trying to disable serial console"
    if [ ! -f $file_cmdline_txt ] && [ $IS_FORCE -ne 1 ]
    then
        die "ERROR: File $file_cmdline_txt does not exist!"
    fi

    if [ $(cat /boot/cmdline.txt|grep "console=serial0,115200"|wc -l) -gt 0 ];then
        sed -i /boot/cmdline.txt -e "s/console=ttyAMA0,[0-9]\+ //"
        sed -i /boot/cmdline.txt -e "s/console=serial0,[0-9]\+ //"
        reboot=$((reboot+1))
        info "Serial disabled successfully."
    else
        info "Serial already disabled"
    fi

    # Create service for enabling gpio pin for reset
    if [ $(insserv -s|grep hm-mod-rpi|wc -l) -eq 0 ]; then 
        progress "Create service for enabling gpio pin for reset line of hm-mod-rpi-pcb on every reboot"
        cat > $file_hm_mod_rpi_pcb <<EOF
#!/bin/sh
### BEGIN INIT INFO
# Provides:       hm-mod-rpi-pcb yahm
# Required-Start: udev mountkernfs \$remote_fs
# Required-Stop:
# Default-Start: S
# Default-Stop:
# Short-Description: Enables GPIO 18 as reset Interface for HM RF Module for Raspberry
# Description:
### END INIT INFO

. /lib/lsb/init-functions

case "\$1" in
  start)
    log_daemon_msg "Enables GPIO 18 as Reset Interface for Homematic RF wireless module"
    printf " Enables GPIO 18 as Reset Interface for Homematic RF wireless module"
    if [ ! -d /sys/class/gpio/gpio18 ]
      then
      echo "Preparing GPIO for HM-MOD-UART..."
      echo 18 > /sys/class/gpio/export
      echo out > /sys/class/gpio/gpio18/direction
      printf "Preparing GPIO for HM-MOD-UART done!"
    fi
    # hold reset until rfd starts
    echo 0 > /sys/class/gpio/gpio18/value
    log_end_msg 0
    ;;
  *)
    echo "Usage: \$0 start" >&2
    exit 3
    ;;
esac
EOF

        chmod +x $file_hm_mod_rpi_pcb
        insserv $file_hm_mod_rpi_pcb
        info "Installing reset gpio as service is done."
    fi 

    # im Gast
    progress "Preparing devices inside LXC container"
    if [ ! -e $LXC_ROOT_FS/dev/ttyAMA0 ];then
        info "Creating device /dev/ttyAMA0..."
        mknod -m 666 ${LXC_ROOT_FS}/dev/ttyAMA0 c 204 64
    fi

    if [ ! -e $LXC_ROOT_FS/dev/mmd_bidcos ];then
        info "Creating symlink /dev/mmd_bidcos..."
        cd ${LXC_ROOT_FS}/dev/
        ln -s ttyAMA0 mmd_bidcos
    fi
    
    if [ ! -L $LXC_ROOT_FS/dev/ccu2-ic200 ];then
        info "Creating symlink /dev/ccu2-ic200..."
        cd ${LXC_ROOT_FS}/dev/
        ln -s /sys/class/gpio/gpio18/value ccu2-ic200
    fi

    progress "Preparing modification rfd.conf..."
    if [ $(cat $file_rfd_conf|grep "\[Interface 0\]"|wc -l) -eq 0 ];then
        info "[Interface 0] block in rfd.conf not found, insert it..."
        echo -e "\n[Interface 0]\nType = CCU2\nComPortFile = /dev/mmd_bidcos\nAccessFile = /dev/null\nResetFile = /dev/ccu2-ic200" >> $file_rfd_conf
        info "Insert in rfd.conf done."
    else
        info "[Interface 0] block found in rfd.conf checking it..."
        # einfuegen
        sed  -i '/#\[Interface 0\]/i \[Interface 0\]' $file_rfd_conf
        sed  -i '/#Type = CCU2/i Type = CCU2' $file_rfd_conf
        sed  -i '/#ComPortFile = \/dev\/mmd_bidcos/i ComPortFile = \/dev\/mmd_bidcos' $file_rfd_conf
        sed  -i '/#AccessFile = \/dev\/null/i AccessFile = \/dev\/null' $file_rfd_conf
        sed  -i '/#ResetFile = \/dev\/ccu2-ic200/i ResetFile = \/dev\/ccu2-ic200' $file_rfd_conf
        # loeschen
        sed  -i '/^#\[Interface 0\]/d' $file_rfd_conf
        sed  -i '/^#Type = CCU2/d' $file_rfd_conf
        sed  -i '/^#ComPortFile = \/dev\/mmd_bidcos/d' $file_rfd_conf
        sed  -i '/^#AccessFile = \/dev\/null/d' $file_rfd_conf
        sed  -i '/^#ResetFile = \/dev\/ccu2-ic200/d' $file_rfd_conf
        info "Modification rfd.conf done."
    fi

    # IP ausgeben
#    IP=$(lxc-info -n ${LXCNAME} |grep -E -o "([0-9]{1,3}[\.]){3}[0-9]{1,3}")
#    echo 'Homematic CCU2 IP:' $IP

    # Reboot
    if [ $reboot -gt 0 ]
    then
        echo "======================================"
        echo "Rebooting in 60 seconds to apply settings (to chancel reboot type 'shutdown -c')..."
        echo "======================================"
        shutdown -r +1 "Rebooting to disable serial console"
    else
        info "HM-MOD-RPI-PCB was installed successfully, please restart YAHM to apply changes"
        progress "Trying to start service"
        systemctl enable hm-mod-rpi-pcb
        systemctl start hm-mod-rpi-pcb
    fi  
}

_module_remove()
{

    file_rfd_conf="${LXC_ROOT_FS}/usr/local/etc/config/rfd.conf"

    if [ "$BOARD_TYPE" != "Raspberry Pi" ] && [ $IS_FORCE -ne 1 ]
    then
        die "ERROR: This module is for Raspberry Pi only, use -f flag to overwrite this check"
    fi

    info "Found hardware: $BOARD_TYPE $BOARD_VERSION"

    # Raspberry 2 oder 3 ?
    if [ "$BOARD_TYPE" = "Raspberry Pi" ] && [ "$BOARD_VERSION" = "3" ]
    then
        progress "Trying to enable bluetooth"
#        if [ -f '/boot/overlays/pi3-disable-bt-overlay.dtb' ];then
#            rm '/boot/overlays/pi3-disable-bt-overlay.dtb'
#            progress "Removing pi3-disable-bt-overlay.dtb"
#        fi

        if [ ! -f /boot/config.txt ] && [ $IS_FORCE -ne 1 ]
        then
            die "ERROR: File /boot/config.txt does not exist!"
        fi

        if [ $(cat /boot/config.txt | grep pi3-disable-bt-overlay | wc -l ) -gt 0 ]
        then
            sed  -i '/^\# Allow the normal UART pins to work/d' /boot/config.txt
            sed  -i '/^dtoverlay=pi3-disable-bt-overlay/d' /boot/config.txt
            progress "Modification in /boot/config.txt is done."        
            reboot=$((reboot+1))
        fi  
    fi
    
    info "Uninstall modification in rfd.conf..."
    if [ $(cat $file_rfd_conf|grep "\[Interface 0\]"|wc -l) -gt 0 ];then
        info "[Interface 0] block found in rfd.conf checking it..."
        # einfuegen
        sed  -i '/\[Interface 0\]/i #\[Interface 0\]' $file_rfd_conf
        sed  -i '/Type = CCU2/i #Type = CCU2' $file_rfd_conf
        sed  -i '/ComPortFile = \/dev\/mmd_bidcos/i #ComPortFile = \/dev\/mmd_bidcos' $file_rfd_conf
        sed  -i '/AccessFile = \/dev\/null/i #AccessFile = \/dev\/null' $file_rfd_conf
        sed  -i '/ResetFile = \/dev\/ccu2-ic200/i #ResetFile = \/dev\/ccu2-ic200' $file_rfd_conf
        # loeschen
        sed  -i '/^\[Interface 0\]/d' $file_rfd_conf
        sed  -i '/^Type = CCU2/d' $file_rfd_conf
        sed  -i '/^ComPortFile = \/dev\/mmd_bidcos/d' $file_rfd_conf
        sed  -i '/^AccessFile = \/dev\/null/d' $file_rfd_conf
        sed  -i '/^ResetFile = \/dev\/ccu2-ic200/d' $file_rfd_conf
        progress "Uninstall modification in rfd.conf is done."
    fi

    progress "Removing devices inside LXC container"
    if [ -e $LXC_ROOT_FS/dev/mmd_bidcos ];then
        info "Remove link /dev/mmd_bidcos."
        rm $LXC_ROOT_FS/dev/mmd_bidcos
    fi

    if [ -L $LXC_ROOT_FS/dev/ccu2-ic200 ];then
        info "Remove link /dev/ccu2-ic200."
        rm $LXC_ROOT_FS/dev/ccu2-ic200
    fi
    
    if [ -e $LXC_ROOT_FS/dev/ttyAMA0 ];then
        info "Remove device /dev/ttyAMA0."
        rm $LXC_ROOT_FS/dev/ttyAMA0
    fi
    #progress "Uninstall Yahm setup is done."
    
    info "Uninstall gpio reset service..."
    if [ -e $file_hm_mod_rpi_pcb ];then
        insserv -r $file_hm_mod_rpi_pcb
        rm $file_hm_mod_rpi_pcb
        progress "Remove $file_hm_mod_rpi_pcb."
    fi
    
    # enable serial
    info "Enable serial..."
    if grep -q "console=ttyAMA0" $file_cmdline_txt;then
        if [ -e /proc/device-tree/aliases/serial0 ]; then
            sed -i $file_cmdline_txt -e "s/console=ttyAMA0/console=serial0/"
            reboot=$((reboot+1))
        fi
        progress "Enable serial is done."
    elif ! grep -q "console=ttyAMA0" $file_cmdline_txt && ! grep -q "console=serial0" $file_cmdline_txt; then
        if [ -e /proc/device-tree/aliases/serial0 ]; then
            sed -i $file_cmdline_txt -e "s/root=/console=serial0,115200 root=/"
        else
            sed -i $file_cmdline_txt -e "s/root=/console=ttyAMA0,115200 root=/"
        fi
        reboot=$((reboot+1))
        progress "Enable serial is done."
    fi
    
    # Reboot
    if [ $reboot -gt 0 ]
    then
        echo "======================================"
        echo "Rebooting in 60 seconds to apply settings (to chancel reboot type 'shutdown -c')..."
        echo "======================================"
        shutdown -r +1 "Rebooting to enable serial console"
    else
        info "HM-MOD-RPI-PCB was uninstalled successfully"
    fi
}
